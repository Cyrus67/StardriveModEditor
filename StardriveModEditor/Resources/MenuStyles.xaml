<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:Name="MenuStyles">
    
    <!--Credit to https://www.jimnuzzi.com/2008/06/29/wpf-xaml-menuitem-styles/ -->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
    </Style>

    
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid x:Name="ItemContainer">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="Col0" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition x:Name="Col1" Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                            <ColumnDefinition x:Name="Col2" Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Content presenter for showing potential icon.-->
                        <ContentPresenter Grid.Column="0" Margin="4 0 6 0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                        <!--Check mark for check items.-->
                        <Grid Grid.Column="0" Visibility="Hidden" Margin="4 0 6 0" x:Name="CheckboxPanel" VerticalAlignment="Center">
                            <Path x:Name="CheckboxPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight"/>
                        </Grid>

                        <!--Content presenter for the menu text.-->
                        <ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" ContentSource="Header"/>

                        <!--Arrow points to the next level of the menu-->
                        <Grid Grid.Column="2" Margin="4 0 6 0" x:Name="ArrowPanel" VerticalAlignment="Center">
                            <TextBlock Text=">" FontSize="8" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Grid>

                        <!--Popup body of the menu for submenus. Down or across-->
                        <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="False">
                            <Border x:Name="SubMenuBorder" Background="{StaticResource PrimaryBackgroundBrush}" BorderBrush="{StaticResource SecondaryBackgroundBrush}" BorderThickness="2" Padding="2 2 2 2">
                                <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                    <!--IsItemsHost designates it as the host for the items.-->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Root menu item, popup expands down from it. -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                            <Setter Property="Width" Value="Auto" TargetName="Col2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="CheckboxPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Child menu item from the top level without any child items. -->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0 2 0 2"/>
                        </Trigger>

                        <!-- This is a child menu item which does have children. -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0 2 0 2"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="ArrowPanel"/>
                        </Trigger>
                        
                        <!-- This is a child menu item which has no children. -->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0 2 0 2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        
                        <!-- If no Icon is present then we collapse the icon content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- The checkmark panel -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="CheckboxPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>
                        
                        <!-- Using the system colors for the Menu Highlight and IsEnabled -->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{StaticResource TertiaryBackgroundBrush}" TargetName="ItemContainer"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>